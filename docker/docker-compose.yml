version: '3.3'

services:
  db_node_01:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db_node_01
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3360:3306
    healthcheck:
      test: "/usr/bin/mysql --host=db_node_01 --database=archdb --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 5s
      retries: 5
    volumes:
      - ./mariadb/rollout/user:/docker-entrypoint-initdb.d
      # - db-node-01-data:/var/lib/mysql

  db_node_02:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db_node_02
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3361:3306
    healthcheck:
      test: "/usr/bin/mysql --host=db_node_02 --database=archdb --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 5s
      retries: 5
    volumes:
      - ./mariadb/rollout/user:/docker-entrypoint-initdb.d
      # - db-node-02-data:/var/lib/mysql

# sequences
  db_node_03:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db_node_03
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3362:3306
    healthcheck:
      test: "/usr/bin/mysql --host=db_node_03 --database=archdb --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 5s
      retries: 5
    volumes:
      - ./mariadb/rollout/sequence:/docker-entrypoint-initdb.d
      # - db-node-03-data:/var/lib/mysql

  proxysql:
    build:
      context: proxysql
      dockerfile: Dockerfile
    container_name: proxysql
    # command: >
    #   --initial
    # volumes:
    #   - proxysql-data:/var/lib/proxysql
    healthcheck:
      test: "/usr/bin/mysql --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    depends_on:
      - db_node_01
      - db_node_02
      - db_node_03
    networks:
      - arch-network
    ports:
      # Mysql Client Port
      - "6033:6033"
      # Mysql Admin Port
      - "6032:6032"

  user_service:
    build:
      context: .
      dockerfile: user_service/Dockerfile
    container_name: user_service
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
    ports:
      - 8080:8080
    networks:
      arch-network:
        ipv4_address: 192.168.55.2
    depends_on:
      proxysql:
        condition: service_healthy

  package_service:
    build:
      context: .
      dockerfile: package_service/Dockerfile
    container_name: package_service
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
    ports:
      - 8082:8082
    networks:
      arch-network:
        ipv4_address: 192.168.55.3
    depends_on:
      proxysql:
        condition: service_healthy

  delivery_service:
    build:
      context: .
      dockerfile: delivery_service/Dockerfile
    container_name: delivery_service
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
    ports:
      - 8081:8081
    networks:
      arch-network:
        ipv4_address: 192.168.55.4
    depends_on:
      proxysql:
        condition: service_healthy

volumes:
  db-node-01-data:
  db-node-02-data:
  db-node-03-data:
  proxysql-data:

networks:
  arch-network:
    driver: "bridge"
    ipam:
      config:
        - subnet: 192.168.55.0/16